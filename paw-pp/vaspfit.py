# %%
import numpy as np
import matplotlib.pyplot as plt


def get_data():
    """Approximates the data from the figure with a polynomial."""
    extracted = """    -1.0459770114942528, 16.4896265560166
-0.8448275862068966, 16.477178423236516
-0.6465517241379309, 16.45228215767635
-0.44252873563218387, 16.42116182572614
-0.34482758620689635, 16.390041493775936
-0.24712643678160906, 16.365145228215766
-0.1436781609195401, 16.3402489626556
-0.048850574712643535, 16.29045643153527
0.1522988505747127, 16.190871369294605
0.25287356321839094, 16.109958506224068
0.350574712643678, 16.053941908713693
0.4597701149425286, 15.991701244813278
0.5574712643678161, 15.885892116182573
0.6494252873563222, 15.817427385892117
0.7528735632183907, 15.730290456431536
0.8505747126436782, 15.643153526970956
0.9540229885057472, 15.568464730290458
0.05747126436781613, 16.25311203319502
0.005747126436781658, 16.278008298755186
-0.09482758620689657, 16.32780082987552
-0.5459770114942528, 16.433609958506224
-0.7442528735632182, 16.464730290456433
-0.942528735632184, 16.4896265560166"""
    extracted = extracted.split("\n")
    extracted = [_.split(",") for _ in extracted]
    extracted = np.array(extracted, dtype=float)
    xs = extracted[:, 0]
    ys = extracted[:, 1]
    return np.polyfit(xs, ys, 6)


xs = np.linspace(-1, 1, 100)

truth = np.poly1d(get_data())(xs)
for order in range(0, 4):
    approximation = np.poly1d(get_data()[-(order + 1) :])(xs)
    plt.plot(xs, abs(truth - approximation), label=f"order={order}")
plt.legend()
plt.ylabel("Absolute error [eV]")
plt.xlabel("lambda")

# %%
